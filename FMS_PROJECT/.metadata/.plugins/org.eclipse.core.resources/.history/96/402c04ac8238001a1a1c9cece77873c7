package com.capgemini.fms_springrest.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.Query;
import org.springframework.stereotype.Repository;
import com.capgemini.fms_springrest.dto.LoginBean;
import com.capgemini.fms_springrest.exception.LoginException;

@Repository
public class AdminDaoImpl implements AdminDao {

	@PersistenceUnit
	private EntityManagerFactory entityManagerFactory;

	LoginBean admin = new LoginBean();

	public boolean adminLogin(String name, String password) {
		try {
			EntityManager entityManager = entityManagerFactory.createEntityManager();
			EntityTransaction transaction = entityManager.getTransaction();
			transaction.begin();

			String jpql = "from LoginBean where userName=:name and  password=:pwd and type='admin'";
			Query query = entityManager.createQuery(jpql);
			query.setParameter("name", name);
			query.setParameter("pwd", password);
//			query.setParameter("type", type);
			@SuppressWarnings("unchecked")
			List<LoginBean> loginBean = query.getResultList();
			if (loginBean != null && loginBean.size() > 0) {
				return true;
			}
		} catch (Exception e) {
			throw new LoginException("Admin details already exists");
		}
		return false;
	}

	public boolean clientLogin(String name, String password) {
		try {
			EntityManager entityManager = entityManagerFactory.createEntityManager();
			EntityTransaction transaction = entityManager.getTransaction();
			transaction.begin();

			String jpql = "from LoginBean where userName=:name and  password=:pwd and type='client'";
			Query query = entityManager.createQuery(jpql);
			query.setParameter("name", name);
			query.setParameter("pwd", password);
//			query.setParameter("type", type);
			@SuppressWarnings("unchecked")
			List<LoginBean> loginBean = query.getResultList();
			if (loginBean != null && loginBean.size() > 0) {
				return true;
			}
		} catch (Exception e) {
			throw new LoginException("Client details already exists");
		}
		return false;
	}

	public boolean clientSignUp(LoginBean client) {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		EntityTransaction transaction = entityManager.getTransaction();
		try {
			transaction.begin();
			entityManager.persist(client);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
		}
		entityManager.close();
		return true;
	}

	public boolean schedularSignUp(LoginBean schedular) {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		EntityTransaction transaction = entityManager.getTransaction();
		try {

			transaction.begin();
			entityManager.persist(schedular);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
		}
		entityManager.close();
		return true;
	}

	@Override
	public boolean adminRegister(LoginBean admin) {
		EntityManager entityManager = entityManagerFactory.createEntityManager();
		EntityTransaction transaction = entityManager.getTransaction();
		try {
			transaction.begin();
			entityManager.persist(admin);
			transaction.commit();
		} catch (Exception e) {
			transaction.rollback();
//			throw new FmsException("Enter valid details");
		}
		entityManager.close();
		return true;
	}
}
